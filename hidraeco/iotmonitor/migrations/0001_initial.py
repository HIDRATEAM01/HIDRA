# Generated by Django 5.2.4 on 2025-08-07 18:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=50, unique=True, verbose_name='ID do Dispositivo')),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('error', 'Erro'), ('maintenance', 'Manutenção')], default='offline', max_length=20, verbose_name='Status')),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Última Conexão')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('firmware_version', models.CharField(blank=True, max_length=20, null=True, verbose_name='Versão do Firmware')),
                ('battery_level', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Nível da Bateria (%)')),
                ('signal_strength', models.IntegerField(blank=True, null=True, verbose_name='Força do Sinal WiFi (dBm)')),
                ('uptime', models.BigIntegerField(blank=True, null=True, verbose_name='Tempo de Atividade (ms)')),
                ('total_readings', models.IntegerField(default=0, verbose_name='Total de Leituras')),
                ('error_count', models.IntegerField(default=0, verbose_name='Contador de Erros')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
            ],
            options={
                'verbose_name': 'Status do Dispositivo',
                'verbose_name_plural': 'Status dos Dispositivos',
                'ordering': ['device_id'],
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coliformes', models.FloatField(help_text='Coliformes fecais em NMP/100mL', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Coliformes')),
                ('ph', models.FloatField(help_text='Potencial Hidrogeniônico', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)], verbose_name='pH')),
                ('dbo', models.FloatField(help_text='Demanda Bioquímica de Oxigênio em mg/L', validators=[django.core.validators.MinValueValidator(0)], verbose_name='DBO')),
                ('nt', models.FloatField(help_text='Nitrogênio Total em mg/L', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nitrogênio Total')),
                ('ft', models.FloatField(help_text='Fósforo Total em mg/L', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fósforo Total')),
                ('temperatura', models.FloatField(help_text='Temperatura da água em °C', validators=[django.core.validators.MinValueValidator(-50), django.core.validators.MaxValueValidator(100)], verbose_name='Temperatura')),
                ('turbidez', models.FloatField(help_text='Turbidez em NTU', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Turbidez')),
                ('residuos', models.FloatField(help_text='Resíduos Sólidos Totais em mg/L', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Resíduos Sólidos')),
                ('od', models.FloatField(help_text='Oxigênio Dissolvido em mg/L', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Oxigênio Dissolvido')),
                ('device_id', models.CharField(default='ESP32_001', help_text='Identificador único do dispositivo sensor', max_length=50, verbose_name='ID do Dispositivo')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora da leitura', verbose_name='Timestamp')),
                ('iqa_valor', models.FloatField(blank=True, help_text='Índice de Qualidade da Água calculado', null=True, verbose_name='Valor IQA')),
                ('iqa_classificacao', models.CharField(blank=True, help_text='Classificação baseada no valor IQA', max_length=20, null=True, verbose_name='Classificação IQA')),
                ('is_valid', models.BooleanField(default=True, help_text='Indica se a leitura passou nas validações', verbose_name='Leitura Válida')),
                ('notes', models.TextField(blank=True, help_text='Observações sobre a leitura', verbose_name='Observações')),
            ],
            options={
                'verbose_name': 'Leitura do Sensor',
                'verbose_name_plural': 'Leituras dos Sensores',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='iotmonitor__timesta_5748cc_idx'), models.Index(fields=['device_id', 'timestamp'], name='iotmonitor__device__3a100b_idx')],
            },
        ),
        migrations.CreateModel(
            name='SensorAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=50, verbose_name='ID do Dispositivo')),
                ('alert_type', models.CharField(choices=[('ph_high', 'pH Alto'), ('ph_low', 'pH Baixo'), ('temperature_high', 'Temperatura Alta'), ('temperature_low', 'Temperatura Baixa'), ('turbidity_high', 'Turbidez Alta'), ('coliform_high', 'Coliformes Alto'), ('od_low', 'Oxigênio Dissolvido Baixo'), ('device_offline', 'Dispositivo Offline'), ('iqa_poor', 'IQA Ruim')], max_length=20, verbose_name='Tipo de Alerta')),
                ('severity', models.CharField(choices=[('low', 'Baixo'), ('medium', 'Médio'), ('high', 'Alto'), ('critical', 'Crítico')], default='medium', max_length=10, verbose_name='Severidade')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='Valor que Causou o Alerta')),
                ('threshold', models.FloatField(blank=True, null=True, verbose_name='Limite Ultrapassado')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data/Hora do Alerta')),
                ('acknowledged', models.BooleanField(default=False, verbose_name='Reconhecido')),
                ('acknowledged_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reconhecido por')),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True, verbose_name='Reconhecido em')),
                ('sensor_reading', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='iotmonitor.sensorreading', verbose_name='Leitura do Sensor')),
            ],
            options={
                'verbose_name': 'Alerta do Sensor',
                'verbose_name_plural': 'Alertas dos Sensores',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='iotmonitor__timesta_595610_idx'), models.Index(fields=['device_id', 'timestamp'], name='iotmonitor__device__c644b4_idx'), models.Index(fields=['acknowledged'], name='iotmonitor__acknowl_df8af4_idx')],
            },
        ),
    ]
